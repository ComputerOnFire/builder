#!/bin/bash

# Treehouses Autorunonce file v0.1


# Local variables. 

# Change variables as required inside the quotes, leaving the quotes untouched.
# Example: connectiontype="wifi" or wifipassword="mypassword1234"

# If set to true, starts tor service and publishes the onion address of the system to ole gitter. Default: false
configtor="false" 

# If set to true, starts the docker service. Default: true
configdocker="true" 

# If set to true, updates the planet to the latest revision. Default: false
updateplanet="false" 

# If set to true, starts the demo on coral board.  Default: false
enablecoralboard="false" 

# If set to "button", bluetooth is enabled unless GPIO 19 is pulled to ground, and if set to "on" bluetooth is always on.  Default: button
bluetooth="button"  

# Changes the system name to the one indicated. Default: treehouses
name="treehouses" 

# Internet configuration
connectiontype="apinternet" # Change to "wifi", "apinternet", "aplocal" or "bridge" type of connection.
			  # "wifi" connects to an existing router, "apinternet" turns raspberry pi into a hotspot with internet connection.
			  # "aplocal" turns Raspberry Pi into a hotspot without internet connection.
			  # and "bridge" connects to an existing router, creates a raspberry pi hotspot and bridges these two connections. 
wifiname="myrouterSSID" # Change to the name (SSID) of your wifi router.
			# (used in wifi or bridge configuration).
hotspotname="treehouses" # Change to the name you want your hotspot to have. Raspberry Pi will be a hotspot with this name as SSID.
			 # (used in apinternet, aplocal or bridge configuration).
wifipassword="" # Insert the password of your wifi router. Leave the field empty for open networks.
		# (used in wifi or bridge configuration).
hotspotpassword="" # Insert the password you want your Raspberry Pi hotspot to have. Can be blank for no password (open network).
		   # Passwords must be 8 characters or more. If your password has less, it will be configured as open network (no password).
		   # (used in apinternet, aplocal or bridge configuration).


#Do not change below this line

case $connectiontype in
	"wifi") treehouses wifi ${wifiname@Q} ${wifipassword@Q};;
	"apinternet") if [ ${#hotspotpassword} -lt 8 ]; then hotspotpassword="" else true; fi; # Checks if the password is > 8 characters long, and if not resets to no password
		      treehouses ap internet ${hotspotname@Q} ${hotspotpassword@Q};;
	"aplocal") if [ ${#hotspotpassword} -lt 8 ]; then hotspotpassword="" else true; fi; 
		   treehouses ap local ${hotspotname@Q} ${hotspotpassword@Q};;
	"bridge") if [ ${#hotspotpassword} -lt 8 ]; then hotspotpassword="" else true; fi;
		  treehouses bridge ${wifiname@Q} ${wifipassword@Q} ${hotspotname@Q} ${hotspotpassword@Q};;
	*) warn "Unsupported configuration. Switching to default ap internet config";
		treehouses ap internet treehouses;;
esac

# Changes "treehouses" to the desired name for your Raspberry Pi system
treehouses rename $name

# Expands the filesystem
treehouses expandfs

# Disables button for bluetooth if Coral Env board is present, or constant bluetooth is selected
if [ $enablecoralboard = "true" ] || [ $bluetooth = "on" ]; then
	treehouses bluetooth on
elif [ $enablecoralboard = "false" ] && [ $bluetooth = "button" ]; then
	treehouses button bluetooth
else treehouses button bluetooth
fi

# Starts tor service
if [ $configtor = "true" ]; then
	treehouses tor add 22
	sleep 10
	sync
	treehouses tor start
	treehouses tor notice on
	sync
	sleep 10
fi

# Starts Coral environmental board demo
if [ $enablecoralboard = "true" ]; then
	python3 /usr/lib/python3/dist-packages/coral/enviro/enviro_demo.py ; :
fi

# Updates planet if there is an internet connection
if [ $updateplanet = "true" ]; then
	docker pull treehouses/planet:latest
	docker pull treehouses/planet:db-init
	docker tag treehouses/planet:latest treehouses/planet:local
	docker tag treehouses/planet:db-init treehouses/planet:db-init-local
fi

# Starts docker container
if [ $configdocker = "true" ]; then
	{	
	echo "#!/bin/sh"
	echo
	echo "sleep 1"
	echo
	echo "if [ -f /srv/planet/pwd/credentials.yml ]; then"
	echo "  docker-compose -f /srv/planet/planet.yml -f /srv/planet/volumes.yml -f /srv/planet/pwd/credentials.yml -p planet up -d"
	echo "else"
	echo "  docker-compose -f /srv/planet/planet.yml -f /srv/planet/volumes.yml -p planet up -d"
	echo "fi"
	} > /boot/autorun

	mv /srv/tenalp /srv/planet

	sync;sync;sync
	
	docker-compose -f /srv/planet/planet.yml -f /srv/planet/volumes.yml -p planet up -d
fi

# Resets if RPiZero or RPi3A
case "$(treehouses detectrpi)" in
  RPIZW|RPI3A+)
    treehouses bootoption console
esac

if [ "$(treehouses rebootneeded)" = "true" ]; then
  reboot
fi
