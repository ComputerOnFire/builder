kind: pipeline
type: docker
name: arm-build

platform:
  arch: arm

steps:
- name: build
  image: johndockenson/runner-armhf:latest
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  environment:
    GITHUB_KEY:
      from_secret: api_key
  privileged: true
  commands:
  - tree
  - git fetch --tags
  - df -h
  - losetup -a
  - dmsetup remove_all
  - losetup -D
  - bash -c 'export GITHUB_KEY="$GITHUB_KEY";mkdir images && PATH=./node_modules/.bin:$PATH ./builder --noninteractive --armhf' # --arm64 or --armhf, need to implement in builder

- name: deploy
  image: johndockenson/runner-armhf
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  environment:
    ssh_deploy_key:
      from_secret: ssh_secret
  privileged: true
  commands:
  - pwd
  #- git fetch --tags
  - echo "$ssh_deploy_key" | base64 --decode --ignore-garbage > .drone/id_deploy
  - .drone/environment.sh
  - echo "$experiment"
  - echo "$image_path"
  - .drone/compress.sh #split these steps!
  - .drone/upload.sh
  when:
    event:
      include:
        - tag

- name: s3-master
  image: plugins/s3
  settings:
    bucket: treehouses
    access_key:
      from_secret: aws_id
    secret_key:
      from_secret: aws_secret
    source: build/*
    strip_prefix: build/
    target: /
  when:
    branch:
    - master
    event:
      include:
        - tag

- name: s3-experiment
  image: plugins/s3
  settings:
    bucket: treehouses
    access_key:
      from_secret: aws_id
    secret_key:
      from_secret: aws_secret
    source: build/*
    strip_prefix: build/
    target: experiment
  when:
    branch:
      exclude:
        - master
    event:
      include:
        - tag

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: arm64

platform:
  arch: arm64

steps:
- name: build
  image: johndockenson/runner-arm64
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  environment:
    GITHUB_KEY:
      from_secret: api_key
  privileged: true
  commands:
  - git fetch --tags
  - df -h
  - losetup -a
  - dmsetup remove_all
  - losetup -D
  - bash -c 'export GITHUB_KEY="$GITHUB_KEY";mkdir images && PATH=./node_modules/.bin:$PATH ./builder --noninteractive --arm64'

- name: deploy
  image: johndockenson/runner-arm64
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  environment:
    ssh_deploy_key:
      from_secret: ssh_secret
  privileged: true
  commands:
  - pwd
  #- git fetch --tags
  - echo "$ssh_deploy_key" | base64 --decode --ignore-garbage > .drone/id_deploy
  - .drone/environment.sh
  - echo "$experiment"
  - echo "$image_path"
  - .drone/compress.sh #split these steps!
  - .drone/upload.sh
  when:
    event:
      include:
        - tag

- name: s3-master
  image: plugins/s3
  settings:
    bucket: treehouses
    access_key:
      from_secret: aws_id
    secret_key:
      from_secret: aws_secret
    source: build/*
    strip_prefix: build/
    target: /
  when:
    branch:
    - master
    event:
      include:
        - tag

- name: s3-experiment
  image: plugins/s3
  settings:
    bucket: treehouses
    access_key:
      from_secret: aws_id
    secret_key:
      from_secret: aws_secret
    source: build/*
    strip_prefix: build/
    target: experiment
  when:
    branch:
      exclude:
        - master
    event:
      include:
        - tag

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

#AWS SETUP
# steps:
# - name: upload
#   image: plugins/s3
#   settings:
#     bucket: my-bucket-name
#     access_key:
#       from_secret: aws_access_key_id
#     secret_key:
#       from_secret: aws_secret_access_key
#     source: public/**/*
#     target: /target/location
    
---
kind: secret
name: api_key
data: r1iXuw9i14r4d91b+MeccMtMJ2OabHNu8jI3UX+v2RJ7/Wa+recZyfSAE50zwBmkxP4otmqTf9cwRdIATC2ksHvhEi8=
#data: dKTWJVyBN3ER2WXjZr2M5ylKG8qAL0DaHz/D4rqUSfMw6SIUkHdr8XDIV2MQD3dZcKdB9gyU2ohFaoGYEhd7hlL59tM= #media server
---
kind: secret
name: ssh_secret
data: RGw+ppmyTOmCvMZjM1Pl7POEm5LEPvdX00IN7iyQcQ7PTn+FujtPlZwKTN/bTEKUev1T2l58HHwX5bS2JrxikabtcKWXBzSesOtDzIFOCeI9gdAS9KXHV0UxhJFG46S4LyGvXYIIdMInQ3vnjZ3XCOvPhi2gG9pgoXrPZJrmZiOmmzq74KbqGUDaR57bb2uk++IZnSAWqfSKjGrJoeQqWOVQX3Tn9YcKuUR4shAt/wNqgHxH4norF6VKZ+X9cB9nlrCgEv+uhyY8wN9T/U/n4Zrqvyr52+6cqNEG/wGxUcyzv4Vcqkn2cKUicHP04h+vkcRo2jYJkEM9Xs890lzQSyzfiO3hPIgyACK6ktQ8qMwa85T47T7+wpICMMmsBkFjv/yk6kqR9SWl1eDb5GQX2Cz52rTK123DBj6iFk6WukuDfBjM5QbyUWQLmLBkSMIb8khg9WT/HyQuAZLMK++oC2S+DC9h8EmKNJ2fM5t5nSA6ExNP3kY0pW+AI/YSS2YHHVemHGt64tCIWSWubgrBeYaQngeBVxy0Y8L0ql5bsUyYCJZxeC9lzNRUfkHsS4BjwBLcqGBhc2bksXKlMX2z7to4U6fHNR7RkVXUb2MWW4OPImptQcj+Y3N31QfO0AjpdJDn2lPeKWtB4kZKD5LDKCj6e8l7SggVPRtCg4WIqLPIPqZ+En9Tv9e0+qGnhMPxYzklutKMdWFPdByq4g+iQrXjrXCmJEOxTUR4G11URL2MJ9PCEc2dzTzvRl21aE+56WHlVn3fJgryjg4wLe9j5HA5se2E8awr/pGgtjZkq+VsTUuB4lQAoJ7QJFlB/ztL6dIi3lDO+URaM6PhRdV70E1FeX6JJP7gDwSnaYJ2i1SHmAPzbUxzYt6NV70xooJdz06bqpq1Kq2KFZX3tkDdUxeECufCgCywCk8SlzvN/cg=
#data: 6QitRTmvtYvUjh0aBwdrkxF8m1qnf+X1vTMOq1pX4tbpW3gYErfO4nDQ7HVuH4AwtallRGh5uxQdmyRjQ3r4gia8AzuM8ZTQmakDGOV1b5DgZSZwag2c4ybvV7ZDRhg1o3gFujKffBqS5vLJONAUflwz9aVonav9S0KPZZjasXUNf1gkXxP6WpKgH505ZgI/ArxKvHfjlbFa5C1Ml5N2p/VOT35MwTPOPYi+vfIzDcKUDCKkNPciwO0BFlpjTMq1AwwD/6QuTwy/yyXOPYLY1vcGTPKVCznLxMIQohSwpVIZbzseuUiVRY36xRSd2EDkIev68V0ElI1n6UkKGM/wFKZ1zRSnOcW+4iAWmsvwoyHsS+7xJh5XFxZUx5gGLVTG4XCugiZPQMTdMPeRfp9lW1Bcy7pWHO/OV/YUOCyS3VvGk0k9syoRY5r9I3R1dbuvi0AGc7Iwh2G6y9Q7PBoHCnSYsFMJys6BXznmy1gHSt43YfYtROeXarCpCI4xv4g0ENHv2QprowdYb7YEonVmxhcFMU1Cir7Z7CpCyOmZSnT7b0sR7InHWnxDkwQEavLMT6Z2+gW4u791CvEB9dBkabSdb876n739mCuTekz1UE7td1zXSeAeHk/YGdUXUFOvxqukl9/8meVXkllf8HkjRl9BvHrIESWB7rFYTBFiaNbLe4fuFzHAel0LTDx4gyqDLoO+TGpeULiyFi5r0Nlx+3otjnoOJ0sIMfWM6NcaRIxBLZuEy2sQAZhdBVWEt8oM3Pkejc0Xad5ROrx0d3x7k5GFU4BryYaaUWwms443YN4Lp4bWPMiUsr3iFaiSrkz7G1Y5TJl1LPKgXmu+YSYfqzeg8SNKs3FkWS158Q3kZvCPXKhlIQsGLs3c3MrDZolycaNvZ5xS+oLrjaxmYE2O0+W195GTtFkusfGJQlnSnVE=
#media server
---
kind: secret
name: aws_id
data: Q1h3TDIntysOLZ1vlHxohieWAp5lzy0eI0EXNDQsBye+larjAWUwY8pW6b2P+QwA
#encrypt these two aws keys again for mit media server, keys are server and repository based (no cloud)
---
kind: secret
name: aws_secret
data: CpJxI8PEbwbMurzWicajTYZvQ2drtT/oO6U01QsOoyceIfvo2x0XojcT0K5i7KUUxa1WZcnmjFR4FwdRVyOZ2AVdQ5M=